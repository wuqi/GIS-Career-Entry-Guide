.. highlight:: rst
.. _books:
################
书籍和课程推荐
################

前言
=========

本章中，按照循序渐进的原则，推荐一些相关书单，有些书比较老了，但是一般够用，比如图解Http只讲到了Http1.1标准，但是Http2.0标准主要是性能提升，而且兼容1.1，问题不大。如果有啥问题，最好是去找找新版或者找找文档，有几本免费的书比较新，而且网络上更新，比较方便。

非专业的书籍，主要是编程类的，我推荐阅读中文版，因为看起来快，咱不是计算机系的，不需要抠字眼，母语书籍看起来就是比原文快。当然如果你有时间，也可以看看原版，大部分推荐的翻译都还是可以的，有英文的有日文的，其实日本。

专业书籍可能有一些原版，因为有些确实没啥好的国内的版本，包括武大自己出版的一些，整体架构啥的都不是很上心，有些还不如前苏联的版本，但是俄文翻译的有些书确实太过时了，就不推荐了。你们应该也能感受到，地理信息系统那本虽然专业课上用的是武大的书，不过大部分应该是按照PPT来讲的，整个顺序架构不一样，因为书有些内容太少了，有些内容过时很久了...

推荐书籍只是参考，并不需要全看完，挑自己感兴趣的看，有些专业课上过了看看目录找自己感兴趣的看就行，有些书当工具书或者消遣看看就行，我是不建议把时间花在啃大部头上的，大部头全部弄懂就算是专家了，搞科研可以静下心来啃，想打工赚钱的，翻一下可以，当工具书查询也可以。

.. hint

    一部分书我这有,不过有条件还是借本或者买本纸质的,翻起来比读电子书方便:
    - 链接: https://pan.baidu.com/s/1paWAVmKRdEC4bzBvpq786Q?pwd=tfyg
    提取码: tfyg

编程
=========

这里面主要介绍一些软件工程，C/C++/Ptyhon 相关的书。提及前端的内容不多，因为前端变化太快，各公司的技术栈也不尽相同，边学边干比直接看书要学的快。

软件工程
-----------

首先推荐阅读的是一些软件工程方面的书籍，这类书籍的代码都很少，主要是讲怎么干活的，比较贴近实际，大部分语言无关:

1. 构建之法（第三版）：没有任何代码，介绍软件工程的，哪怕还没学编程语言，没碰过计算机，也可以看看
2. 代码大全 第二版:适合刚学,想自己动手写点东西的时候看,看看实践中具体的需求
3. 程序员修炼之道 第二版:适合动手后,看看这本书复盘,实际操作后才更能理解一些条条框框
4. 大话软件测试：这本书标题是测试，其实也算是软工吧，从需求分析讲起的，整个项目流程到最终测试交付都有，看完可以了解下真实的项目流程，当然，小公司可能并没有这么规范的流程。

.. attention

    前两本推荐不管想不想学编程的同学们都看看，因为这里面介绍的都是基础，讲的是整个项目中会碰到的各种问题。《程序员修炼之道》这本可酌情看看，这本没有实操，或者踩过两年坑感触就不会很深。《大话软件测试》这本产品和测试可以看看，至少了解下大厂里一个项目正经流程是啥样。

编程语言学习
----------------------

然后是编程语言入门，建议还是先入手 C 语言，毕竟 C 大类还是最基础的一类，很多人说 python 简单啊，现在 AI 都用 python 啊，真正干活的时候，大部分是C++，或者用js、ts，c#，Qt写界面，c++，java写处理逻辑。

c++ 标准现在大部分咱用的是部分 17 的功能，但是基本用起来还是 c with class，不会用特别高级的方案，不要怕。

Javascript 的话，自己看一下 js 入门和 es6 ，然后学习下 vue 或者 react ，找个框架，比如 element+ ，加上leaflet/maptalkjs/openlayers 之类的地图库，自己从头搭建一个地图界面，跑一下看看，比看书要学得快，不过最好还是先看看文档。

GIS 并不需要特别牛逼的计算机技巧，也不是很追新，但是建议还是一步步学扎实，我推荐点书，希望大家能少走点弯路：

入门
^^^^^^^^
入门是从零开始的意思，并不是说里面的内容简单，而是下面这些书从零开始，基本不需要特别多的基础知识。哪怕有基础，有些内容也可以读一下，比如 Crash Course 课程

1. `《编码:隐匿在计算机软硬件背后的语言》<https://book.douban.com/subject/4822685//>`_ ：这本从二进制开始讲，实际是个科普书，适合完全不懂的小白入门，不需要任何基础。 **这本是科普书，如果时间紧，都开始找工作了，就跳过吧** ，有时间再慢慢看。这本书难度不高，但是说的还是很深入的，结构组织漂亮，语言通俗易懂。入门真的不错。
2. `Crash Course：Computer Science <https://www.bilibili.com/video/av21376839/?vd_source=d463c5c67292e2d4b85de1e3d8f8c0dc>`_ ：这门计算机速成课是视频，讲的深入浅出，内容庞杂，如果真的想搞开发，可以刷一遍，产品测试之类的可以看看，毕竟视频没看书费脑子。
3. `《C语言程序设计》 <https://book.douban.com/subject/33400767/>`_ ：著名的K&R,薄,入门快，书很薄,不要学啥奇技淫巧,直接用这个,该知道的知识点知道就行。这本其实不算特别好入门的，但是确实是很经典的书籍。
4. `《C Primer Plus》 <https://book.douban.com/subject/26792521/>`_ 
5. C++程序设计(原理与实践基础篇原书第2版) :开始推荐的是 《c++ primer plus》，后来发现这本更适合一些，不是《c++程序设计语言》！ c++ 的书真的挺多的，这本很厚，不过很适合入门，至少是有不少示例的，而且没那么啰嗦。
6. c++ primer plus：蓝白色的那本，不是红色（新的是白的）的！我知道大部分推荐的是c++ primer，但是咱不是计算机系的，好些刚上大学都没碰过编程。啥都不懂的话，看这本入门，这本标准很低，c++11，确实很老，但是你得先入门，c++ primer 那些术语，还有书本结构，完全不适合新手看，看了基本就是21分钟从入门到放弃，先看这本，讲的细，但是先学会走才能跑。
7. `Learn X in Y Minutes <https://learnxinyminutes.com/docs/zh-cn/c++-cn/>`__ :如果你只想半小时速成，那看这个好了，需要一些C的基础，这个是给一些有基础的同学看的，学过基础，想快速了解一些奇奇怪怪的语言，可以看看这个。
8. `Hello算法 <https://www.hello-algo.com/chapter_hello_algo/>`__：免费的算法教程，也是比较好的算法教程，整体架构清晰，学完一门语言后就可以看看这个了，大致了解一下常用的数据结构，常用的一些算法，做到心里有数就行，不一定要看算法导论那种大部头，一般人也看不完
9. Headfirst设计模式: 介绍设计模式的,简单易懂，比Hello算法还简单易懂，快的话一两天就看完了，很简单，设计模式用在实际工程中的时候其实需要注意的东西挺多，但是用这个入个门没啥大问题
10. `编程不难 <https://github.com/Visualize-ML/Book1_Python-For-Beginners>`__ ：免费Python教程，我不推荐找本大部头或者报班学，因为没有目标，但是这本书定位明确，就是为了学python处理数据的，里面从环境安装说起，适合小白，而且也适合GIS中的栅格数据，如果你的目标是做学术，这本以及这一整个系列是值得看的，干活的话啥快用啥，py简单，环境配起来麻烦而且迁移难，自己做点研究的话确实挺好用。
11. `JavaScript 教程 <https://wangdoc.com/javascript/>`__ ：js的标准教程，可以看这个，也可以去\ `mdn <https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript>`__ 学一下，这个方便点，mdn有时候要科学上网，感觉也没有这么系统，有些地方偏实用。

.. note

    我的建议是不论想不想做开发，都先扫一遍《代码大全》，或者《大话软件测试》，了解真正项目是如何运作的。对后续的工作有很大帮助。