.. highlight:: rst
.. _books:
################
书籍和课程推荐
################

前言
=========

本章中，会按照循序渐进的原则，推荐一些相关书单，有些书比较老了，但是一般够用，比如图解Http只讲到了Http1.1标准，但是Http2.0标准主要是性能提升，而且兼容1.1，问题不大。如果有啥问题，最好是去找找新版或者找找文档，有几本免费的书比较新，而且网络上更新，比较方便。

非专业的书籍，主要是编程类的，我推荐阅读中文版，因为看起来快，咱不是计算机系的，不需要抠字眼，母语书籍看起来就是比原文快。当然如果你有时间，也可以看看原版，大部分推荐的翻译都还是可以的，有英文的有日文的，其实日本。

专业书籍可能有一些原版，因为有些确实没啥好的国内的版本，包括武大自己出版的一些，整体架构啥的都不是很上心，有些还不如前苏联的版本，但是俄文翻译的有些书确实太过时了，就不推荐了。你们应该也能感受到，地理信息系统那本虽然专业课上用的是武大的书，不过大部分应该是按照PPT来讲的，整个顺序架构不一样，因为书有些内容太少了，有些内容过时很久了...

推荐书籍只是参考，并不需要全看完，挑自己感兴趣的看，有些专业课上过了看看目录找自己感兴趣的看就行，有些书当工具书或者消遣看看就行，我是不建议把时间花在啃大部头上的，大部头全部弄懂就算是专家了，搞科研可以静下心来啃，想打工赚钱的，翻一下可以，当工具书查询也可以。

.. hint

    一部分书我这有,不过有条件还是借本或者买本纸质的,翻起来比读电子书方便:
    - 链接: https://pan.baidu.com/s/1paWAVmKRdEC4bzBvpq786Q?pwd=tfyg
    提取码: tfyg

编程
=========

这里面主要介绍一些软件工程，C/C++/Ptyhon 相关的书。提及前端的内容不多，因为前端变化太快，各公司的技术栈也不尽相同，边学边干比直接看书要学的快。

软件工程
-----------

首先推荐阅读的是一些软件工程方面的书籍，这类书籍的代码都很少，主要是讲怎么干活的，比较贴近实际，大部分语言无关:

1. 构建之法（第三版）：没有任何代码，介绍软件工程的，哪怕还没学编程语言，没碰过计算机，也可以看看
2. 代码大全 第二版:适合刚学,想自己动手写点东西的时候看,看看实践中具体的需求
3. 程序员修炼之道 第二版:适合动手后,看看这本书复盘,实际操作后才更能理解一些条条框框
4. 大话软件测试：这本书标题是测试，其实也算是软工，从需求分析讲起的，整个项目流程到最终测试交付都有，看完可以了解下真实的项目流程，当然，小公司可能并没有这么规范的流程。

.. attention

    前两本推荐不管想不想学编程的同学们都看看，因为这里面介绍的都是基础，讲的是整个项目中会碰到的各种问题。《程序员修炼之道》这本可酌情看看，这本没有实操，或者踩过两年坑感触就不会很深。《大话软件测试》这本不想干编程的可以看看，不论去国企还是私企，做学术还是做工程，了解一个项目的整体正经流程到哪里都是加分项。

编程语言学习
----------------------

然后是编程语言入门，建议还是先入手 C 语言，毕竟 C 大类还是最基础的一类，很多人说 python 简单啊，现在 AI 都用 python 啊，真正干活的时候，大部分是C++，或者用js、ts，c#，Qt写界面，c++，java写处理逻辑。

c++ 标准现在大部分咱用的是部分 17 的功能，但是基本用起来还是 c with class，不会用特别高级的方案，不要怕。

Javascript 的话，自己看一下 js 入门和 es6 ，然后学习下 vue 或者 react ，找个框架，比如 element+ ，加上 leaflet/maptalkjs/openlayers 之类的地图库，自己从头搭建一个地图界面，跑一下看看，比看书要学得快，文档就是最好的老师。

GIS 并不需要特别牛逼的计算机技巧，也不是很追新，但是建议还是一步步学扎实，我推荐点书，希望大家能少走点弯路：

入门
^^^^^^^^
入门是从零开始的意思，并不是说里面的内容简单，而是下面这些书从零开始，基本不需要特别多的基础知识。哪怕有基础，有些内容也可以读一下，比如 Crash Course 课程

1. `《编码:隐匿在计算机软硬件背后的语言》<https://book.douban.com/subject/4822685/>`_ ：这本从二进制开始讲，实际是个科普书，适合完全不懂的小白入门，不需要任何基础。 **这本是科普书，如果时间紧，都开始找工作了，就跳过吧** ，有时间再慢慢看。这本书难度不高，但是说的还是很深入的，不算很薄，结构组织漂亮，语言通俗易懂。入门真的不错。
2. `Crash Course：Computer Science <https://www.bilibili.com/video/av21376839>`_ ：这门计算机速成课是视频，讲的深入浅出，内容庞杂，如果真的想搞开发，可以刷一遍，产品测试之类的可以酌情看看，毕竟视频没看书费脑子。
3. `《C语言程序设计》 <https://book.douban.com/subject/33400767/>`_ ：著名的K&R,薄,入门快，书很薄，如果有一些基础，比如至少会用Visual Studio，那这本书能用。这本其实不算特别好入门的，因为它真的就讲了C语言，其他编译链接什么的都没怎么讲，看完了可能还是完全不会动手，但是确实是很经典的书籍，有基础的可以看看这个，查漏补缺。
4. `《C Primer Plus》 <https://book.douban.com/subject/26792521/>`_ ：这本讲的太细了，其实可以不用看的那么细，但是如果真的是啥都没接触过，可以看这本入门。还有个选择，就是找B站上
5. `《C++程序设计(原理与实践基础篇原书第2版)》 <https://book.douban.com/subject/27023080/>`_  :开始推荐的是 《c++ primer plus》，后来发现这本更适合一些，注意，不是《c++程序设计语言》！ c++ 的书真的挺多的，这本很厚，不过很适合入门，至少是有不少示例的，而且没那么啰嗦。
6. `《c++ primer plus》 <https://book.douban.com/subject/35126643/>`_  ：蓝白色的那本，不是红色（新的也是白的）的！我知道大部分推荐的是《c++ primer》，但是咱不是计算机系的，好些刚上大学都没碰过编程。啥都不懂的话，看这本入门，这本标准很低，c++11，确实很老，但是你得先入门，《c++ primer》 那些术语，还有书本结构，完全不适合新手看，看了基本就是21分钟从入门到放弃，先看这本，讲的细，但是先学会走才能跑。
7. `Learn X in Y Minutes <https://learnxinyminutes.com/docs/zh-cn/c++-cn/>`_ :如果你只想半小时速成，那看这个好了，需要一些C的基础，这个是给一些有基础的同学看的，学过基础，想快速了解一些奇奇怪怪的语言，可以看看这个。
8. `Hello算法 <https://www.hello-algo.com/chapter_hello_algo/>`_ ：免费的算法教程，也是比较好的算法教程，整体架构清晰，学完一门语言后就可以看看这个了，大致了解一下常用的数据结构，常用的一些算法，做到心里有数就行，不一定要看算法导论那种大部头，一般人也看不完
9. `《Headfirst设计模式》 <https://book.douban.com/subject/2243615/>`_ : 介绍设计模式的,简单易懂，比Hello算法还简单易懂，快的话一两天就看完了，很简单，设计模式用在实际工程中的时候其实需要注意的东西挺多，但是用这个入个门没啥大问题
10. `编程不难 <https://github.com/Visualize-ML/Book1_Python-For-Beginners>`_ ：免费Python教程，我不推荐找本大部头或者报班学，因为没有目标，但是这本书定位明确，就是为了学python处理数据的，里面从环境安装说起，适合小白，而且也适合GIS中的栅格数据，如果你的目标是做学术，这本以及这一整个系列是值得看的，干活的话啥快用啥，py简单，环境配起来麻烦而且迁移难，自己做点研究的话确实挺好用。
11. `JavaScript 教程 <https://wangdoc.com/javascript/>`_ ：js的标准教程，可以看这个，也可以去\ `mdn <https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript>`_ 学一下，这个方便点，mdn有时候要科学上网，感觉也没有这么系统，有些地方偏实用。

.. note

    这块基本都是编程入门推荐，如果不想干编程，这块可以全部跳过，但是我还是建议看看 `Crash Course：Computer Science <https://www.bilibili.com/video/av21376839/>`_ ，这套视频看完至少有点基础，出去面试忽悠人至少挺好用。

进阶
^^^^^^^^

进阶的一些书其实挺杂的，有些也不一定算是很好的书，但是，至少都是当时对我有用的书籍：

1. `《C++ API设计》 <https://book.douban.com/subject/24869855/>`_ ：这本是具体的实践，讲的都是些实际会碰到的问题，如何设计接口，如何具体实现，可以在干过些项目后，看看这个增长一些见识
2. `C语言接口与实现 <https://book.douban.com/subject/4908227/>`_ ：这本就是介绍 C 语言中各种老登写法，如何写有 C 味的程序，书有些老，写了很多数据结构实现，其中实现方式不一定是最佳的，但是代码结构和代码的写法很贴合实际，可以一读。
3. `面向ArcGIS的Python脚本编程 <https://book.douban.com/subject/26290313/>`_ ：这本挺老的，但是基本还是这套玩意吧，如果觉得不够用，看看 Esri 文档。我不建议专门学 python，因为脚本都是用的，不是学的，学了后啥也干不了， arcpy 封装好了一大堆功能，开箱即用，可以学习 GIS 的矢量、栅格的处理，这本书确实挺老的，但是足够上手。
4. `OI Wiki <https://oi-wiki.org>`_ ：编程竞赛的网站，里面常见的数据结构，计算几何，图论等等算法都有，需要基础，先看hello算法，用到的时候再查查，比如凸包啊，三角剖分之类的。
5. `ES6入门教程 <https://es6.ruanyifeng.com>`_ ：现在最新是ES2023,可能我写完不知道又会刷新几个版本，但是ES6引入的东西最多，后面没有这么多，ES6是javascript的方言，所以必须学完了javascript再看看这个，不然会一脸懵逼。


高级
^^^^

高级的意思是里面的知识比较高阶，不算是必要的知识。因此推荐的几本书可能读起来比进阶还要简单点，写的都比较通俗。

1. `《程序是怎样跑起来的》 <https://book.douban.com/subject/36085560/>`_  ：这本虽然写的比较风趣，但是难度还是有的，建议至少上手过一整个项目后再看看，看看计算机怎么跑程序的，会解决你很多的疑问
2. `《程序员的自我修养》 <https://book.douban.com/subject/3652388/>`_  ：编程学到最后总要学点编译原理啊什么的，这本比上本深入，不过也不难，也值得精读一下，了解下什么是链接，因为大部分时候我们用的都是IDE，至少要学会离开了IDE要咋办，这本大概看一遍就知道了
3. `手撸解释器教程 <https://readonly.link/books/https://raw.githubusercontent.com/GuoYaxiang/craftinginterpreters_zh/main/book.json>`__\ ：如何创建一门脚本语言的在线教程，对于解释器、编译器、JIT、VM 等等高阶内容都有介绍，感兴趣可以读下

数据库
----------------------

这里就是普通的数据库，而非空间数据库，空间数据库在专业课里会专门写。数据库这块是基础，不管你是干啥的，这块都要打交道的，最好是理解理论，理论结合实际会让你干活更顺利。

1. 课本：虽然有点无聊，但是够用，该讲的都讲了，有些不那么通俗，但是还是得学下理解下，因为你看其他专业书术语也差不多，视频推荐 `哈工大数据库系统 战德臣 <https://www.bilibili.com/video/BV1HY4y1b72A/>`_ 或者 `数据库系统概论（王珊老师） <https://www.bilibili.com/video/BV1pW411W7Do>`_ 。数据库里一大堆概念和定义，我的建议是老老实实看书，看视频其实并没有那么有帮助。
2. `《自己动手设计数据库》 <https://book.douban.com/subject/26630846/>`_  ：换了个说法的教科书，不那么无聊，但是内容差不多，但是不无聊就已经算是很优秀了，定义解释的也更通俗一些。
3. `《数据密集型应用系统设计》 <https://book.douban.com/subject/30329536/>`_  ： **非必要不用看** ，如果想专门走这条路可以看看。这玩意有点深，大部头，我没看...跟算法导论一样，是本好书，不过不是必须要看，当然，如果有时间可以看看，上学可比上班有时间多了。

网络
----------------------

现在搞 GIS 最新方向基本跟网络和可视化分不开，搞不懂能用，但是搞得懂就可以用的更好。这里推荐的基本都是些简单易懂的书，我们不是 SA ，也不考啥相关的证，可以扫一眼下面相关书籍，理解即可。

1. 

